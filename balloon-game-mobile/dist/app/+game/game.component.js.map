{"version":3,"file":"game.component.js","sourceRoot":"","sources":["game.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Inject, OnInit, OnDestroy } from '@angular/core';\nimport { AchievementComponent } from './achievement/achievement.component';\nimport { GameService } from './service/game.service';\n\ndeclare var Phaser: any;\ndeclare var sjcl: any;\ndeclare var componentHandler: any;\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-game',\n  templateUrl: 'game.component.html',\n  styleUrls: ['game.component.css'],\n  directives: [AchievementComponent],\n})\n\nexport class GameComponent implements OnInit, OnDestroy {\n  currentState = 'title';\n  game;\n  teamScore = 0;\n  achievements = [];\n  goldenSnitch1Created = false;\n  goldenSnitch2Created = false;\n  goldenSnitchChance = 0.2;\n  balloons;\n  explosions;\n  pointsHash;\n  configuration;\n\n  constructor(private gameService: GameService) {\n    this.currentState = this.gameService.currentState;\n    this.configuration = this.gameService.configuration;\n\n    if (this.configuration.points) {\n      this.pointsHash = {\n        'balloon_red': this.configuration.points.red,\n        'balloon_blue': this.configuration.points.blue,\n        'balloon_yellow': this.configuration.points.yellow,\n        'balloon_green': this.configuration.points.green,\n        'balloon_golden1': this.configuration.points.goldenSnitch1,\n        'balloon_golden2': this.configuration.points.goldenSnitch2,\n      }\n    }\n\n    this.stateChangeHandler = this.stateChangeHandler.bind(this);\n    this.configurationChangeHandler = this.configurationChangeHandler.bind(this);\n\n    this.gameService.stateChange.subscribe(this.stateChangeHandler);\n    this.gameService.configurationChange.subscribe(this.configurationChangeHandler);\n  }\n\n  ngOnInit() {\n    this.game = new Phaser.Game(window.innerWidth, window.innerHeight - 56, Phaser.AUTO, 'game', null, true);\n\n    const fireRate = 100;\n    // Burr: const numBalloons = 4;\n    const numBalloons = 5;\n    const balloonRotationSpeed = 100;\n    let nextFire = 0;\n    let consecutive = 0;\n\n    let TitleState = {\n      create: () => {\n        this.game.stage.disableVisibilityChange = true;\n      }\n    };\n\n    let PlayState = {\n      preload: () => {\n        // Burr: this.game.load.atlas('balloons', './app/+game/assets/balloons.png', './app/+game/assets/balloons.json');\n        this.game.load.atlas('balloons', './app/+game/assets/balloons_v2.png', './app/+game/assets/balloons_v2.json');\n        this.game.load.spritesheet('explosion', './app/+game/assets/explosion.png', 128, 128, 10);\n      },\n      create: () => {\n        this.game.stage.disableVisibilityChange = true;\n        this.game.physics.arcade.gravity.y = 500;\n\n        this.balloons = this.game.add.group();\n        this.balloons.enableBody = true;\n        this.balloons.physicsBodyType = Phaser.Physics.ARCADE;\n\n        for (var i = 0; i < numBalloons; i += 1) {\n          this.balloons.create(0, 0, 'balloons', i, false);\n        }\n\n        this.balloons.setAll('checkWorldBounds', true);\n        this.balloons.setAll('outOfBoundsKill', true);\n        this.balloons.setAll('blendMode', Phaser.blendModes.OVERLAY);\n        this.balloons.setAll('alpha', this.configuration.opacity);\n\n        this.balloons.children.forEach(PlayState.setupBalloon);\n\n        this.explosions = this.game.add.group();\n        this.explosions.createMultiple(4, 'explosion');\n        this.explosions.children.forEach(explosion => {\n          explosion.anchor.set(0.5);\n          explosion.animations.add('explode');\n        });\n\n        PlayState.throwObject();\n      },\n      update: () => {\n        PlayState.throwObject();\n      },\n      setupBalloon: balloon => {\n        balloon.checkWorldBounds = true;\n        balloon.outOfBoundsKill = true;\n        balloon.scale.setTo(this.configuration.scale);\n        balloon.anchor.setTo(0.5);\n        balloon.inputEnabled = true;\n        balloon.events.onOutOfBounds.add(() => {\n          if (balloon.frameName === 'balloon_golden1') {\n            this.balloons.remove(balloon);\n            this.goldenSnitch1Created = false;\n          }\n          if (balloon.frameName === 'balloon_golden2') {\n            this.balloons.remove(balloon);\n            this.goldenSnitch2Created = false;\n          }\n          consecutive = 0;\n        });\n\n        balloon.events.onInputDown.add(evt => {\n          balloon.kill();\n\n          if (balloon.frameName === 'balloon_golden1') {\n            this.balloons.remove(balloon);\n            this.goldenSnitch1Created = false;\n          }\n          if (balloon.frameName === 'balloon_golden2') {\n            this.balloons.remove(balloon);\n            this.goldenSnitch2Created = false;\n          }\n\n\n          consecutive += 1;\n          this.gameService.playerScore += this.pointsHash[balloon.frameName];\n\n          var explosion = this.explosions.getFirstExists(false);\n          explosion.reset(evt.world.x, evt.world.y);\n          explosion.play('explode', 30, false, true);\n\n          // Burr: this is the message payload per pop\n          this.gameService.sendMessage({\n            type: 'score',\n            score: this.gameService.playerScore,\n            playerId: this.gameService.playerId,\n            playerName: this.gameService.playerUsername,\n            // encryptedScore: sjcl.encrypt(''+this.gameService.playerId, ''+this.gameService.playerScore),\n            consecutive: consecutive,\n            goldenSnitch1Popped: (balloon.frameName === 'balloon_golden1') ? true : false,\n            goldenSnitch2Popped: (balloon.frameName === 'balloon_golden2') ? true : false,\n            balloonType: balloon.frameName\n          });\n\n          this.gameService.updatePlayerScore(this.gameService.playerScore);\n\n          // purely for demo purposes\n          if (consecutive % 5 === 0) {\n            this.achievements = [{\n              type: 'consecutive',\n              message: `Nice job! ${consecutive} pops in a row!`\n            }];\n          }\n        });\n      },\n      throwObject: () => {\n        if (this.game.time.now > nextFire && this.balloons.countDead() > 0) {\n          if (this.balloons.countDead() > 0) {\n            nextFire = this.game.time.now + fireRate;\n            PlayState.throwGoodObject();\n          }\n        }\n      },\n      throwGoodObject: () => {\n        let obj;\n        \n        if (this.configuration.goldenSnitch1 && Math.random() < this.goldenSnitchChance && !this.goldenSnitch1Created) {\n          console.log(\"creating Burr\"); \n          obj = this.balloons.create(0, 0, 'balloons', 4, false);\n          PlayState.setupBalloon(obj);\n          \n         this.goldenSnitch1Created = true;\n        } else {\n          obj = this.balloons.getFirstDead();\n        }\n\n        if (this.configuration.goldenSnitch2 && Math.random() < this.goldenSnitchChance && !this.goldenSnitch2Created) {\n          console.log(\"creating Ray\");          \n          obj = this.balloons.create(0, 0, 'balloons', 5, false);\n          PlayState.setupBalloon(obj);\n          \n         this.goldenSnitch2Created = true;\n        } else {\n          obj = this.balloons.getFirstDead();\n        }\n\n\n        obj.reset(this.game.world.centerX + this.game.rnd.integerInRange(-75, 75), this.game.world.height);\n        obj.body.angularVelocity = (Math.random() - 0.5) * balloonRotationSpeed;\n\n        if (this.configuration.opacity) {\n          obj.alpha = this.configuration.opacity / 100;\n        }\n\n        if (this.configuration.scale) {\n          obj.scale.x = this.configuration.scale;\n          obj.scale.y = this.configuration.scale;\n        }\n\n        const speed = (this.game.world.height + 56 - 568) * 0.5 + (575 + (this.configuration.speed - 50) * 5);\n\n        this.game.physics.arcade.moveToXY(obj, this.game.world.centerX + this.game.rnd.integerInRange(-50, 50), this.game.world.centerY, speed);\n      }\n    };\n\n    let GameOverState = {\n      create: () => {}\n    };\n\n    this.game.state.add('Title', TitleState);\n    this.game.state.add('Play', PlayState);\n    this.game.state.add('GameOver', GameOverState);\n    // this.game.state.start('Title');\n\n    this.stateChangeHandler({\n      state: this.currentState\n    });\n\n    // PlayState.throwGoodObject = PlayState.throwGoodObject.bind(this);\n  }\n\n  stateChangeHandler(evt) {\n    this.currentState = evt.state;\n\n    switch (evt.state) {\n      case 'title':\n        this.game.state.start('Title');\n        this.game.paused = false;\n        break;\n\n      case 'play':\n        if (this.game.state.current !== 'Play') {\n          this.game.state.start('Play');\n        }\n\n        this.game.paused = false;\n        break;\n\n      case 'pause':\n        if (this.game.isRunning) {\n          this.game.paused = true;\n        }\n\n        break;\n\n      case 'game-over':\n        this.game.state.start('GameOver');\n        this.game.paused = false;\n        break;\n    }\n  }\n\n  configurationChangeHandler(evt) {\n    this.configuration = evt.configuration;\n\n    if (this.configuration.points) {\n      this.pointsHash = {\n        'balloon_red': this.configuration.points.red,\n        'balloon_blue': this.configuration.points.blue,\n        'balloon_yellow': this.configuration.points.yellow,\n        'balloon_green': this.configuration.points.green,\n        'balloon_golden1': this.configuration.points.goldenSnitch1,\n        'balloon_golden2': this.configuration.points.goldenSnitch2,\n      }\n    }\n  }\n\n  reconnect() {\n    this.gameService.reconnecting = true;\n    this.gameService.connect();\n\n    setTimeout(() => {\n      componentHandler.upgradeDom();\n    }, 0);\n  }\n\n  ngOnDestroy() {\n    this.game.destroy();\n  }\n\n  nameLoaded(event) {\n    event.target.classList.add('loaded');\n    event.target.classList.remove('loading');\n  }\n}\n"]}