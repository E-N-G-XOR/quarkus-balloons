{"version":3,"file":"selfie.component.js","sourceRoot":"","sources":["selfie.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef } from '@angular/core';\nimport { Http, HTTP_PROVIDERS, Headers, RequestOptions } from '@angular/http';\nimport { GameService } from '../+game/service/game.service';\nimport { environment } from '../environment'\n\ndeclare var loadImage: any;\ndeclare var componentHandler: any;\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-selfie',\n  host: {'class': 'dark-bg'},\n  templateUrl: 'selfie.component.html',\n  styleUrls: ['selfie.component.css'],\n  providers: [ HTTP_PROVIDERS ]\n})\n\nexport class SelfieComponent {\n  canvas;\n  uploadBtn;\n  imageUploaded: boolean = false;\n  error: boolean = false;\n  uploading: boolean = false;\n  canUpload: boolean = false;\n  scoreIncrement: number = 500;\n  pointsAwarded: boolean = false;\n  uploadUrl: string = (environment.production) ? 'http://player-id-server-demo.apps-test.redhatkeynote.com/upload' : 'http://localhost:8085/upload';\n\n  constructor(private http: Http, private gameService: GameService, private elementRef: ElementRef) {}\n\n  onChange(event) {\n    const self = this;\n\n    if (event.target.files.length === 1 && event.target.files[0].type.indexOf('image/') === 0) {\n      let file = event.target.files[0];\n      let options = {\n        maxWidth: 300,\n        maxHeight: 300,\n        crop: true,\n        downsamplingRatio: 0.05\n      };\n\n      self.canUpload = true;\n\n      loadImage.parseMetaData(file, data => {\n        if (data.exif) {\n          options['orientation'] = data.exif.get('Orientation');\n        }\n\n        loadImage(file, data => {\n          self.canvas = document.getElementById('canvas');\n          self.canvas.parentNode.replaceChild(data, this.canvas);\n          self.canvas = data;\n        }, options);\n      });\n    }\n  }\n\n  upload() {\n    if (this.gameService.currentState === 'game-over') {\n      return;\n    }\n    \n    let image = this.canvas.toDataURL('image/jpeg', 0.1);\n    let body = JSON.stringify({\n      image: image,\n      id: localStorage.getItem('id') || ''\n    });\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n\n    this.pointsAwarded = false;\n    this.uploading = true;\n\n    setTimeout(() => {\n      componentHandler.upgradeDom();\n    }, 0);\n\n    this.http.post(this.uploadUrl, body, options)\n      .toPromise()\n      .then(res => {\n        let data = res.json();\n        this.uploading = false;\n\n        if (data.success) {\n          this.imageUploaded = true;\n          localStorage.setItem('id', data.id);\n\n          if (!this.gameService.selfieTaken) {\n            // give the user some points for uploading their player id\n            this.gameService.incrementPlayerScore(this.scoreIncrement);\n            this.gameService.setSelfieTaken(true);\n            this.pointsAwarded = true;\n          }\n        }\n      })\n      .catch(err => {\n        this.uploading = false;\n        this.imageUploaded = true;\n        this.error = true;\n      });\n  }\n\n  tryAgain() {\n    this.canUpload = false;\n    this.imageUploaded = false;\n    this.error = false;\n    this.uploading = false;\n  }\n}\n"]}